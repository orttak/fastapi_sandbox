# name: Docker Compose Actions Workflow #https://github.com/peter-evans/docker-compose-actions-workflow
# on: push
# jobs:
#   docker-compose-build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: Build the stack
#         run: docker-compose up -d
#       - name: create env file
#         run: |
#           touch ./src/app/.env
#           echo database_hostname="db" >> ./src/app/.env
#           echo  database_port=5432  >> ./src/app/.env
#           echo  database_password="hello_fastapi"   >> ./src/app/.env
#           echo  database_name="hello_fastapi_dev  >> ./src/app/.env
#           echo  database_username="hello_fastapi  >> ./src/app/.env
#           echo  secret_key = "09d25e094faa6ca2556c818145b7a9563b93f7958f6f0f4caa6cf63b88e8d3e7  >> ./src/app/.env
#           echo  algorithm="HS256  >> ./src/app/.env
#           echo  database_full_name='postgresql://hello_fastapi:hello_fastapi@db/hello_fastapi_dev  >> ./src/app/.env
#           echo  access_token_expire_minutes=30 >> ./src/app/.env
#       - name: Test
#         run: docker exec -i web  pytest -v
name: Docker Compose

on:
  push:
    branches:
      - main

env:
  DOCKER_COMPOSE_VERSION: 2.0.0

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get -y install curl
          sudo curl -L "https://github.com/docker/compose/releases/download/v3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Deploy Docker Compose services
        run: |
          docker-compose -f docker-compose-test.yml up -d
          docker exec -it web pytest -v
